geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=-1.5)+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "데이터 유형"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(data1,aes(x=기간))+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=-1.5)+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "데이터 유형"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 1,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(data1,aes(x=기간))+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=-1.5)+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "데이터 유형"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
totaldata$연도 <- as.character(totaldata$연도)
str(totaldata)
ggplot(data1,aes(x=기간))+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=-1.5)+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(data1,aes(x=기간))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
totaldata
ggplot(data1,aes(x=기간))+geom_line(aes(y=쇠 수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠 입,color='수입',group=1), size = 1)+
ggplot(totaldata,aes(x=기간))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(limits = c(0, 500000))
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous((labels = scales::comma_format(scale = 1e-3), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-3), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-2), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-4), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-6), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-4), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "물량")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=돼.수,color='수출',group=1), size = 1)+geom_line(aes(y=돼.입,color='수입',group=1), size = 1)+
geom_point(aes(y=돼.수,color='수출'), size = 3)+geom_point(aes(y=돼.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=돼.수,label=돼.수),vjust=-1.5)+
geom_text(aes(y=돼.입,label=돼.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 돼지고기 수출입 물량현황                       단위 톤",x ="연도", y = "물량")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=닭.수,color='수출',group=1), size = 1)+geom_line(aes(y=닭.입,color='수입',group=1), size = 1)+
geom_point(aes(y=닭.수,color='수출'), size = 3)+geom_point(aes(y=닭.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=닭.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=닭.입,label=닭.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 닭고기 수출입 물량현황                       단위 톤",x ="연도", y = "물량")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=닭.수,color='수출',group=1), size = 1)+geom_line(aes(y=닭.입,color='수입',group=1), size = 1)+
geom_point(aes(y=닭.수,color='수출'), size = 3)+geom_point(aes(y=닭.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=닭.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=닭.입,label=닭.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 닭고기 수출입 물량현황                       단위 톤",x ="연도", y = "물량")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous( limits = c(0, 200000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=닭.수,color='수출',group=1), size = 1)+geom_line(aes(y=닭.입,color='수입',group=1), size = 1)+
geom_point(aes(y=닭.수,color='수출'), size = 3)+geom_point(aes(y=닭.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=닭.수,label=닭.수),vjust=-1.5)+
geom_text(aes(y=닭.입,label=닭.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 닭고기 수출입 물량현황                       단위 톤",x ="연도", y = "물량")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous( limits = c(0, 200000))
ggplot(data1,aes(x=기간))+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=-1.5)+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
library(tidytext)
reroll <- read.csv("리롤.csv")
소 <- reroll %>% filter(str_detect(reroll$품종,"소")==TRUE)
소$품종 <- gsub("소","",소$품종)
소$연도 <- as.character(소$연도)
소
소_min <- 소 %>% group_by(연도) %>% slice(which.min(판매량))
소_min
돼지 <- reroll %>% filter(str_detect(reroll$품종,"돼지")==TRUE)
돼지$품종 <- gsub("돼지","",돼지$품종)
돼지$연도 <- as.character(돼지$연도)
돼지
돼지_min <- 돼지 %>% group_by(연도) %>% slice(which.min(판매량))
돼지_min
닭 <- reroll %>% filter(str_detect(reroll$품종,"닭")==TRUE)
닭$품종 <- gsub("닭","",닭$품종)
닭$연도 <- as.character(닭$연도)
닭_min <-  닭%>% group_by(연도) %>% slice(which.min(판매량))
vjust_a <- ifelse(돼지$판매량%in% 돼지_min$판매량,1,-0.5)
vjust_b <- ifelse(닭$판매량%in% 닭_min$판매량,1.5,-0.5)
vjust_b
ggplot(소,aes(x=연도,y=판매량,fill=품종))+geom_bar(stat = 'identity',position = 'dodge',width = 0.8)+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0),limits = c(0, 300000))+
geom_text(aes(label=판매량),position=position_dodge(width = 0.8),vjust=-0.5)+
theme_bw()+labs(title=paste0("2014-2023년 ","소", " 수입현황"),x ="연도", y = "수입량")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(돼지,aes(x=연도,y=판매량,fill=품종))+geom_bar(stat = 'identity',position = 'dodge',width = 0.8)+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0),limits = c(0, 300000))+
geom_text(aes(label=판매량),position=position_dodge(width = 0.8),vjust=vjust_a)+
theme_bw()+labs(title=paste0("2014-2023년 ","돼지", " 수입현황"),x ="연도", y = "수입량")+
theme(plot.title = element_text(hjust = 0.55,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(닭,aes(x=연도,y=판매량,fill=품종))+geom_bar(stat = 'identity',position = 'dodge',width = 0.8)+
geom_text(aes(label=판매량),position=position_dodge(width = 0.8),vjust=vjust_b)+theme_bw()+labs(title=paste0("2014-2023년 ","닭", " 수입현황"),x ="연도", y = "수입량")+
theme(plot.title = element_text(hjust = 0.55,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
data2 <- read.csv("33.csv")
data2
data2$연도 <- as.character(data2$연도)
str(data2)
ggplot(data1,aes(x=기간))+geom_bar(aes(y=무역수지),stat ='identity',alpha=0.2,fill=ifelse(data1$무역수지<0,'blue','red'),width = 0.55,position = "identity")+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=ifelse(data1$무역수지<0,2,-1.7))+
geom_text(aes(y=무역수지,label=무역수지),vjust = -0.5,color=ifelse(data1$무역수지<0,'blue','red'))+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=ifelse(data1$무역수지<0,-1.5,1.5))+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
library(tidytext)
ggplot(data1,aes(x=기간))+geom_bar(aes(y=무역수지),stat ='identity',alpha=0.2,fill=ifelse(data1$무역수지<0,'blue','red'),width = 0.55,position = "identity")+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=ifelse(data1$무역수지<0,2,-1.7))+
geom_text(aes(y=무역수지,label=무역수지),vjust = -0.5,color=ifelse(data1$무역수지<0,'blue','red'))+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=ifelse(data1$무역수지<0,-1.5,1.5))+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
reroll <- read.csv("리롤.csv")
소 <- reroll %>% filter(str_detect(reroll$품종,"소")==TRUE)
소$품종 <- gsub("소","",소$품종)
소$연도 <- as.character(소$연도)
소
소_min <- 소 %>% group_by(연도) %>% slice(which.min(판매량))
소_min
돼지 <- reroll %>% filter(str_detect(reroll$품종,"돼지")==TRUE)
돼지$품종 <- gsub("돼지","",돼지$품종)
돼지$연도 <- as.character(돼지$연도)
돼지
돼지_min <- 돼지 %>% group_by(연도) %>% slice(which.min(판매량))
돼지_min
닭 <- reroll %>% filter(str_detect(reroll$품종,"닭")==TRUE)
닭$품종 <- gsub("닭","",닭$품종)
닭$연도 <- as.character(닭$연도)
닭_min <-  닭%>% group_by(연도) %>% slice(which.min(판매량))
vjust_a <- ifelse(돼지$판매량%in% 돼지_min$판매량,1,-0.5)
vjust_b <- ifelse(닭$판매량%in% 닭_min$판매량,1.5,-0.5)
vjust_b
ggplot(소,aes(x=연도,y=판매량,fill=품종))+geom_bar(stat = 'identity',position = 'dodge',width = 0.8)+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0),limits = c(0, 300000))+
geom_text(aes(label=판매량),position=position_dodge(width = 0.8),vjust=-0.5)+
theme_bw()+labs(title=paste0("2014-2023년 ","소", " 수입현황"),x ="연도", y = "수입량")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(돼지,aes(x=연도,y=판매량,fill=품종))+geom_bar(stat = 'identity',position = 'dodge',width = 0.8)+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0),limits = c(0, 300000))+
geom_text(aes(label=판매량),position=position_dodge(width = 0.8),vjust=vjust_a)+
theme_bw()+labs(title=paste0("2014-2023년 ","돼지", " 수입현황"),x ="연도", y = "수입량")+
theme(plot.title = element_text(hjust = 0.55,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(닭,aes(x=연도,y=판매량,fill=품종))+geom_bar(stat = 'identity',position = 'dodge',width = 0.8)+
geom_text(aes(label=판매량),position=position_dodge(width = 0.8),vjust=vjust_b)+theme_bw()+labs(title=paste0("2014-2023년 ","닭", " 수입현황"),x ="연도", y = "수입량")+
theme(plot.title = element_text(hjust = 0.55,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
data1 <- read.csv("111.csv")
data1
data1$기간 <- as.character(data1$기간)
str(data1)
ggplot(data1,aes(x=기간))+geom_bar(aes(y=무역수지),stat ='identity',alpha=0.2,fill=ifelse(data1$무역수지<0,'blue','red'),width = 0.55,position = "identity")+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=ifelse(data1$무역수지<0,2,-1.7))+
geom_text(aes(y=무역수지,label=무역수지),vjust = -0.5,color=ifelse(data1$무역수지<0,'blue','red'))+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=ifelse(data1$무역수지<0,-1.5,1.5))+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=닭.수,color='수출',group=1), size = 1)+geom_line(aes(y=닭.입,color='수입',group=1), size = 1)+
geom_point(aes(y=닭.수,color='수출'), size = 3)+geom_point(aes(y=닭.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=닭.수,label=닭.수),vjust=-1.5)+
geom_text(aes(y=닭.입,label=닭.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 닭고기 수출입 물량현황                       단위 톤",x ="연도", y = "물량")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous( limits = c(0, 200000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=돼.수,color='수출',group=1), size = 1)+geom_line(aes(y=돼.입,color='수입',group=1), size = 1)+
geom_point(aes(y=돼.수,color='수출'), size = 3)+geom_point(aes(y=돼.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=돼.수,label=돼.수),vjust=-1.5)+
geom_text(aes(y=돼.입,label=돼.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 돼지고기 수출입 물량현황                       단위 톤",x ="연도", y = "물량")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0), limits = c(0, 500000))
ggplot(totaldata,aes(x=연도))+geom_line(aes(y=쇠.수,color='수출',group=1), size = 1)+geom_line(aes(y=쇠.입,color='수입',group=1), size = 1)+
geom_point(aes(y=쇠.수,color='수출'), size = 3)+geom_point(aes(y=쇠.입,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=쇠.수,label=쇠.수),vjust=-1.5)+
geom_text(aes(y=쇠.입,label=쇠.입),vjust=-1.5)+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 쇠고기 수출입 물량현황                       단위 톤",x ="연도", y = "물량")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))+ scale_y_continuous(labels = scales::comma_format(scale = 1e-0), limits = c(0, 500000))
ggplot(data1,aes(x=기간))+geom_bar(aes(y=무역수지),stat ='identity',alpha=0.2,fill=ifelse(data1$무역수지<0,'blue','red'),width = 0.55,position = "identity")+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=ifelse(data1$무역수지<0,2,-1.7))+
geom_text(aes(y=무역수지,label=무역수지),vjust = -0.5,color=ifelse(data1$무역수지<0,'blue','red'))+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=ifelse(data1$무역수지<0,-1.5,1.5))+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
ggplot(data,aes(x=기간))+geom_line(aes(y=수출.금액),color='red', size = 1)+geom_line(aes(y=수입.금액),color='blue', size = 1)+
geom_point(aes(y=수출.금액),color='red', size = 3)+geom_point(aes(y=수입.금액),color='blue', size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=-2)+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=-2)+labs(title="2014-2023년 육류 수출입현황",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.5,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
labs(color = "수출입")
ggplot(data1,aes(x=기간))+geom_bar(aes(y=무역수지),stat ='identity',alpha=0.2,fill=ifelse(data1$무역수지<0,'blue','red'),width = 0.55,position = "identity")+geom_line(aes(y=수출.금액,color='수출',group=1), size = 1)+geom_line(aes(y=수입.금액,color='수입',group=1), size = 1)+
geom_point(aes(y=수출.금액,color='수출'), size = 3)+geom_point(aes(y=수입.금액,color='수입'), size = 3)+
xlab("기간")+ylab("금액")+geom_text(aes(y=수출.금액,label=수출.금액),vjust=ifelse(data1$무역수지<0,2,-1.7))+
geom_text(aes(y=무역수지,label=무역수지),vjust = -0.5,color=ifelse(data1$무역수지<0,'blue','red'))+
geom_text(aes(y=수입.금액,label=수입.금액),vjust=ifelse(data1$무역수지<0,-1.5,1.5))+
scale_color_manual(values=c("수출"='#F78181',"수입"="#8181F7")) + labs(color="Type") +
guides(color=guide_legend(title= "수출입구분"))+theme_bw()+labs(title="2014-2023년 육류 수출입현황                       단위 천달러",x ="연도", y = "금액")+
theme(plot.title = element_text(hjust = 0.75,size=20,face='bold'))+theme(axis.title.x = element_text(size=20,face='bold'))+
theme(axis.title.y = element_text(size=20,face='bold'))
#market name은 market명과 한글 명을 가져옴 ( market 명은 모든 함수에 사용 한글명은 시각화때 이용)
marketname <- fromJSON("https://api.upbit.com/v1/market/all?isDetails=false") %>% select(market,korean_name)
library(shiny)
library(quantmod)
library(dygraphs)
library(highcharter)
library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
library(tidytext)
library(ggwordcloud)
library(showtext)
library(KoNLP)
library(multilinguer)
library(readr)
library(httr)
library(textclean)
library(RCurl)
library(rvest)
library(xts)
library(lubridate)
library(timetk)
library(tidygraph)
library(widyr)
library(ggraph)
library(magrittr)
library(PerformanceAnalytics)
library(corrplot)
library(forecast)
library(TTR)
library(tm)
library(xml2)
library(pander)
library(topicmodels)
library(XML)
library(jsonlite)
library(flexdashboard)
library(flexdashboard)
#market name은 market명과 한글 명을 가져옴 ( market 명은 모든 함수에 사용 한글명은 시각화때 이용)
marketname <- fromJSON("https://api.upbit.com/v1/market/all?isDetails=false") %>% select(market,korean_name)
marketname <- marketname %>% filter(str_detect(marketname$market,"KRW")==TRUE)
marketname <- marketname[1:5,]
for (i in 1:5){
print(i)
}
for (i in 1:5){
print(i)
}
#원하는 날짜(date) ex) 2022-01-01 부터 가져오고 싶으면 2022-01-02 입력,원하는 자료 개수(count),해당 사이트 최대 가져올수있는 일수가 200개
dataamount <- function(date,num){
# 개수의 풀더 존재 여부
ifelse(dir.exists(paste0(num,'_datas')),FALSE,dir.create(paste0(num,'_datas')))
# 개수의 데이터의 그룹(200개씩)
zip <- num%/%200
# 200개 이하의 데이터를 따로 구축
least <- num %%200
#에러를 찾기 위한 코드(대부분의 에러는 429에러 발생)
counts=0
marketinfo <- NULL
for (name in marketname$market){
counts=counts+1
#날짜 계산을 위한 날짜형 변형
date <- as.Date(date)
tryCatch({
# 200개 이하 일때
if (zip==0){
marketdate<- fromJSON(paste0("https://api.upbit.com/v1/candles/days?count=",least,"&to=",date,"%2000%3A00%3A00&market=",name))
marketinfo <- rbind(marketinfo,marketdate)
}else{
#zip=1이상일 경우
for (count in 1:zip){
#zip이 1일경우
if (count==1) {
marketdate<- fromJSON(paste0("https://api.upbit.com/v1/candles/days?count=200&to=",date,"%2000%3A00%3A00&market=",name))
marketinfo <- rbind(marketinfo,marketdate)
}
#zip이 2이상일 경우
else if(count>=2){
#date에서 200일씩 차감
day <- date -((count-1)*200)
marketdate<- fromJSON(paste0("https://api.upbit.com/v1/candles/days?count=200&to=",day,"%2000%3A00%3A00&market=",name))
marketinfo <- rbind(marketinfo,marketdate)
}
}
#200개 이상일때 나머지 일수 계산
if(zip>=2){
days <- date-(zip*200)
marketdate<- fromJSON(paste0("https://api.upbit.com/v1/candles/days?count=",least,"&to=",days,"%2000%3A00%3A00&market=",name))
marketinfo <- rbind(marketinfo,marketdate)
}else if(zip==1){
days <- date-200
marketdate<- fromJSON(paste0("https://api.upbit.com/v1/candles/days?count=",least,"&to=",days,"%2000%3A00%3A00&market=",name))
marketinfo <- rbind(marketinfo,marketdate)
}
}
#해당 날짜 부터 데이터가 없을경우 패스
if (is.null(marketdate)){
next
}else{
#존재하면 csv파일로 작성
print(c(name,counts))
}
})
Sys.sleep(4)
}
marketinfo$candle_date_time_utc <- gsub("[[:punct:]]","",marketinfo$candle_date_time_utc)%>% substr(3,8)
marketinfo<- marketinfo %>% select(candle_date_time_utc,trade_price,market)
write.csv(marketinfo,paste0(num,'_datas/total_info.csv'),row.names = F)
}
group <- function(num){
marketreturn <- NULL
a <- NULL
for (name in marketname$market) {
if(file.exists(paste0(num,'_datas/total_info.csv'))){
#데이터 가져오기 & 날짜형태로 변환
price <- read.csv(paste0(num,'_datas/total_info.csv'))
price$candle_date_time_utc <- price$candle_date_time_utc%>% as.character() %>% as.Date(format='%y%m%d')
#시계열데이터로 변환
price <- price%>% select(candle_date_time_utc,trade_price) %>% as.xts()
#auto.arima실행으로 arima 계수 구하기
mf <- auto.arima(price)
# 각 마켓별 arima 데이터프레임으로 가져오기
a <- rbind(a,c(market=name,ar=length(mf$model$phi),i=length(mf$model$Delta),ma=length(mf$model$theta)))
# 모델 구하기 및 예측
model <- Arima(price,c(length(mf$model$phi),length(mf$model$Delta),length(mf$model$theta)))
fore <- forecast(model,h=5)
#수익률 계산 및 마켓 별 arima 계수 측정
return <- read.csv(paste0(num,'_datas/',name, '_info.csv'))
return <- return[1,]%>% select(market,trade_price) %>% mutate(forec=fore$mean[1],returns=(forec-trade_price)/(trade_price)*100)
marketreturn<- rbind(marketreturn,return)
}
}
#수익률 + 마켓별arima 계수 합치기 / 수익률 별로 정렬(이유는 수익룰이 0이면 ARIMA=0,1,0이므로 각 ARIMA구별이 쉬워짐)
info <- merge(marketreturn,a)
info <- info[order(-info$returns),]
print(info)
#시각화
vision <- marketreturn[order(-marketreturn$returns),]
#상위 3개 암호화폐 추출
vision <- vision[1:3,]
i=1
par(mfrow=c(3,1))
for (name in vision$market) {
#csv 파일 읽기
price <- read.csv(paste0(num,'_datas/total_info.csv'))
price$candle_date_time_utc <- price$candle_date_time_utc%>% as.character() %>% as.Date(format='%y%m%d')
price <- price%>% select(candle_date_time_utc,trade_price) %>% as.xts()
# 수익률 상위 3개 (i가 작으면 최상위 상품)
if (i==1) {
mf <- auto.arima(price)
model <- Arima(price,c(length(mf$model$phi),length(mf$model$Delta),length(mf$model$theta)))
fore1<- forecast(model,h=5)
# 시각화
plot(fore1,ann=FALSE)
# 한글명
title(main=marketname$korean_name[marketname$market==name])
}else if(i==2){
mf <- auto.arima(price)
model <- Arima(price,c(length(mf$model$phi),length(mf$model$Delta),length(mf$model$theta)))
fore2 <- forecast(model,h=5)
plot(fore2,ann=FALSE)
title(main=marketname$korean_name[marketname$market==name])
}else{
mf <- auto.arima(price)
model <- Arima(price,c(length(mf$model$phi),length(mf$model$Delta),length(mf$model$theta)))
fore3<- forecast(model,h=5)
plot(fore3,ann=FALSE)
title(main=marketname$korean_name[marketname$market==name])
}
i=i+1
}
}
program <- function(date,num){
dataamount(date,num)
group(num)
}
program("2024-06-04",365)
program("2024-06-04",500)
setwd("C:/Users/MSI/Downloads/data/500_datas")
setwd("C:/Users/MSI/Desktop/workspace1/암호화폐")
shinytest::testApp("C:/Users/MSI/Desktop/workspace1/암호화폐")
---
title: "암호화폐 모형진단 및 시각화"
shinytest::testApp("C:/Users/MSI/Desktop/workspace1/암호화폐")
C:/Users/MSI/Desktop/workspace1/암호화폐/
C:/Users/MSI/Desktop/workspace1/암호화폐/
